#!perl

# DATE
# VERSION

use 5.010;
use strict;
use warnings;

use App::GitUtils;
use Perinci::CmdLine::Any -prefer_lite=>1;

my $p = '/App/GitUtils/'; # prefix
Perinci::CmdLine::Any->new(
    url => $p,
    subcommands => {
        'info'        => {url => "${p}info"},
        'run-hook'    => {url => "${p}run_hook"},
        'rh'          => {url => "${p}run_hook",
                          summary => 'Alias for run-hook'},
        'post-commit' => {url => "${p}post_commit"},
        'pre-commit'  => {url => "${p}pre_commit"},
    },
    default_subcommand => 'info',
    get_subcommand_from_arg => 2,
)->run;

# ABSTRACT:
# PODNAME:

=head1 SYNOPSIS

To list available subcommands:

 % gu --subcommands

For help:

 % gu --help


=head1 SUBCOMMANDS

=head2 info

This is the default subcommand when no subcommand is specified.

 % gu
 % gu info

It displays repo information (currently only C<.git> location).

=head2 run-hook (alias: rh)

 % gu run-hook post-commit
 % gu rh pre-commit

are basically the same as:

 % .git/hooks/post-commit
 % .git/hooks/pre-commit

except they can be run anywhere inside the repo, and can use tab completion.

=head2 post-commit

 % gu post-commit

is shortcut for:

 % gu run-hook post-commit

=head2 pre-commit

 % gu pre-commit

is shortcut for:

 % gu run-hook pre-commit

=head2 info
